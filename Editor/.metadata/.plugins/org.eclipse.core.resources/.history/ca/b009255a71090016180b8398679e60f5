package parsers;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.Scanner;


public class INITfile {

	File file;
	HashMap<String, HashMap<String, Object>> sections = new HashMap<String, HashMap<String, Object>>();
	
	//Pass the .ini file in as an object
	public INITfile(File file) {
		this.file = file;
		load();
	}
	
	//adds a section to the ini file
	public void addSection(String category){
		sections.put(category, new HashMap<String, Object>());
		save();
	}
	
	//adds a key and value to a section, if section doesnt exist it will automatically create it
	//doesnt create it
	public void addValue(String category, String key, Object value){
		if(!sections.containsKey(category)){
			addSection(category);
		}
		sections.get(category).put(key, value);
	}
	
	/*/hopefully returns a section
	public String get(String str){
		return sections<str>;
	}*/
	
	//returns the file as a string
	public String toString(){
		return sections.toString();
	}
	
	//writes the object to the file
	public void save(){
		try {
			FileWriter fw = new FileWriter(file);
			
			for(String category:sections.keySet()){
				fw.write(category+"\r");
				for(String key:sections.get(category).keySet()){
					fw.write(key + "=" + sections.get(category).get(key) + "\r");
				}
			}
			
			fw.close();
		} 
		catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	//reads the file to the object
	public void load(){
		try {
			Scanner scan = new Scanner(file);
			int line_count = 0;
			
			String category = "[No Category]";
			while(scan.hasNextLine()){
				String line = scan.nextLine().trim();
				line_count++;
				
				if(line.startsWith("[")){
					category = line;
					addSection(line);
				}
				else{
					String[] pair = line.split("=");
					if(pair.length == 2){
						addValue(category, pair[0], pair[1]);
					}
					else{
						System.out.println("Error in inifile: " + line_count);
					}
				}
			}
			scan.close();
		} 
		catch (FileNotFoundException e) {
			e.printStackTrace();
		}
	}
	
	//saves the object then reopens
	public void reload(){
		save();
		load();
	}
}